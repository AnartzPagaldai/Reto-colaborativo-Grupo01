CREATE OR REPLACE PACKAGE BODY GESTION_CALENDARIO AS
    -- FALTE EL PROCESO DE GENERAR LAS JORNADAS TIPO PLAYOF
    -- VERIFICAR QUE SE AN INTRODUCIDO LOS PLAYOFS ANTES DE QUE SE INTORDUCCAN EN NUEVAS JORNADAS EN EL SIGUIENTE SPLIT
    -- COMPROBAR QUE EL SPLIT ESTA CREADO ANTES DE ....
    -- ARREGLAR BUG DE QUE SE QUEDA PILLADO
    PROCEDURE CREAR_SPLIT(TIPO_SPLIT IN VARCHAR) AS 
    BEGIN
        INSERT INTO SPLIT (ANIO, TIPO, ESTADO) VALUES (SYSDATE, TIPO_SPLIT, 'ABIERTO'); 
    END CREAR_SPLIT;
    PROCEDURE GENERAR_ENFRENTAMIENTOS AS
        FECHA_PARTIDO DATE := SYSDATE + (7 - TO_NUMBER(TO_CHAR(SYSDATE, 'D')));
        JORNADA_ID NUMBER(3);
        COMPROBADOR NUMBER(1);
        CONT_PARTIDO NUMBER(2);
        CONT_JORNADA NUMBER(2) := 1;
        SPLIT_ID NUMBER(2);
    BEGIN
        UPDATE SPLIT SET ESTADO = 'CERRADO';
        SELECT MAX(ID) INTO SPLIT_ID FROM SPLIT;
        SELECT COUNT(*) INTO COMPROBADOR FROM USER_TABLES WHERE UPPER(TABLE_NAME) = 'EMPAREJAMIENTOS';
        IF COMPROBADOR != 0 THEN
            EXECUTE IMMEDIATE 'DROP TABLE EMPAREJAMIENTOS';
        END IF;
        EXECUTE IMMEDIATE 'CREATE GLOBAL TEMPORARY TABLE EMPAREJAMIENTOS (
                      ID1 VARCHAR2(50),
                      ID2 VARCHAR2(50)
                    )';
        FOR EQUIPO1 IN (SELECT ID FROM EQUIPOS) LOOP
            FOR EQUIPO2 IN (SELECT ID FROM EQUIPOS WHERE ID != EQUIPO1.ID) LOOP
                SELECT COUNT(*) INTO COMPROBADOR FROM emparejamientos
                    WHERE (ID1 = EQUIPO1.ID AND ID2 = EQUIPO2.ID) 
                    OR (ID1 = EQUIPO2.ID AND ID2 = EQUIPO1.ID);
                IF (COMPROBADOR = 0) THEN
                    INSERT INTO EMPAREJAMIENTOS VALUES (EQUIPO1.ID, EQUIPO2.ID);
                END IF;
            END LOOP;
        END LOOP;
        INSERT INTO JORNADAS (NUM_JORNADA, TIPO, ID_SPLIT) 
        VALUES (CONT_JORNADA,'NORMAL', SPLIT_ID);
        WHILE CONT_JORNADA <= 11 LOOP 
            SELECT MAX(ID) INTO JORNADA_ID FROM JORNADAS;
            CONT_PARTIDO := 0; 
            FOR PAREJA IN (SELECT * FROM EMPAREJAMIENTOS ORDER BY DBMS_RANDOM.VALUE) LOOP
                SELECT COUNT(*) INTO COMPROBADOR FROM PARTIDOS, JORNADAS
                    WHERE (((   ID_EQUIPO1 = PAREJA.ID1) 
                            OR (ID_EQUIPO2 = PAREJA.ID1)
                            OR (ID_EQUIPO1 = PAREJA.ID2) 
                            OR (ID_EQUIPO2 = PAREJA.ID2))
                                AND ID_JORNADA = JORNADA_ID)
                        OR    
                          (((  ID_EQUIPO1 = PAREJA.ID2 AND ID_EQUIPO2 = PAREJA.ID1) 
                           OR (ID_EQUIPO1 = PAREJA.ID1 AND ID_EQUIPO2 = PAREJA.ID2))
                                AND ID_JORNADA = JORNADAS.ID AND ID_SPLIT = SPLIT_ID);
                IF COMPROBADOR = 0 THEN
                    INSERT INTO PARTIDOS (FECHA, LUGAR, ID_JORNADA, ID_EQUIPO1, ID_EQUIPO2) 
                    VALUES (FECHA_PARTIDO,'SI', JORNADA_ID, PAREJA.ID1, PAREJA.ID2);
                    CONT_PARTIDO := CONT_PARTIDO + 1;
                END IF;
            END LOOP;
            DBMS_OUTPUT.PUT_LINE(CONT_PARTIDO || ' ' || CONT_JORNADA);
            IF CONT_PARTIDO = 6 THEN
                FECHA_PARTIDO := FECHA_PARTIDO + 7;
                CONT_JORNADA := CONT_JORNADA + 1;
                IF CONT_JORNADA <= 11 THEN 
                    INSERT INTO JORNADAS (NUM_JORNADA, TIPO, ID_SPLIT) 
                    VALUES (CONT_JORNADA,'NORMAL',SPLIT_ID);
                END IF;
            ELSE 
                DELETE FROM PARTIDOS WHERE ID_JORNADA = JORNADA_ID;
            END IF;
        END LOOP;
        
        EXCEPTION
         WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
            DBMS_OUTPUT.PUT_LINE(DBMS_UTILITY.FORMAT_ERROR_STACK());
            DELETE 
    END GENERAR_ENFRENTAMIENTOS;
    
END GESTION_CALENDARIO;